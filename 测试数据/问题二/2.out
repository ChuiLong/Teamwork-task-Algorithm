=== 时序任务调度问题求解器 ===

测试用例数: 2

--- 测试用例 1 ---
任务数: 5, 组员数: 3
任务信息:
  任务1: 工作量p=3, 发布时间x=0, 截止时间y=3
  任务2: 工作量p=4, 发布时间x=1, 截止时间y=4
  任务3: 工作量p=5, 发布时间x=2, 截止时间y=6
  任务4: 工作量p=2, 发布时间x=0, 截止时间y=5
  任务5: 工作量p=1, 发布时间x=3, 截止时间y=7
总工作量sum: 15
组员速度:
  组员1: 速度v[1]=1
  组员2: 速度v[2]=2
  组员3: 速度v[3]=3
初始二分范围: [0.000000, 16.000000]
速度排序前: 1 2 3 
速度排序后(降序): 3 2 1 
差分处理:
  v[1]: 3 → 1 (差分后)
  v[2]: 2 → 1 (差分后)
  v[3]: 1 (保持不变)
开始二分搜索:
我们可以最多增长单位时间0.0000

--- 测试用例 2 ---
任务数: 6, 组员数: 2
任务信息:
  任务1: 工作量p=10, 发布时间x=0, 截止时间y=3
  任务2: 工作量p=10, 发布时间x=1, 截止时间y=4
  任务3: 工作量p=10, 发布时间x=2, 截止时间y=5
  任务4: 工作量p=10, 发布时间x=1, 截止时间y=3
  任务5: 工作量p=10, 发布时间x=0, 截止时间y=2
  任务6: 工作量p=10, 发布时间x=3, 截止时间y=6
总工作量sum: 60
组员速度:
  组员1: 速度v[1]=4
  组员2: 速度v[2]=4
初始二分范围: [0.000000, 16.000000]
速度排序前: 4 4 
速度排序后(降序): 4 4 
差分处理:
  v[1]: 4 → 0 (差分后)
  v[2]: 4 (保持不变)
开始二分搜索:
我们可以最多增长单位时间2.0000
