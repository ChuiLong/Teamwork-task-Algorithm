=== 时序任务调度问题求解器 ===

测试用例数: 1

--- 测试用例 1 ---
任务数: 30, 组员数: 30
任务信息:
  任务1: 工作量p=93456, 发布时间x=0, 截止时间y=50000
  任务2: 工作量p=54872, 发布时间x=20000, 截止时间y=90000
  任务3: 工作量p=12345, 发布时间x=30000, 截止时间y=80000
  任务4: 工作量p=67890, 发布时间x=50000, 截止时间y=160000
  任务5: 工作量p=11111, 发布时间x=80000, 截止时间y=130000
  任务6: 工作量p=22222, 发布时间x=120000, 截止时间y=200000
  任务7: 工作量p=33333, 发布时间x=150000, 截止时间y=220000
  任务8: 工作量p=44444, 发布时间x=180000, 截止时间y=250000
  任务9: 工作量p=55555, 发布时间x=210000, 截止时间y=300000
  任务10: 工作量p=66666, 发布时间x=240000, 截止时间y=290000
  任务11: 工作量p=77777, 发布时间x=280000, 截止时间y=360000
  任务12: 工作量p=88888, 发布时间x=330000, 截止时间y=400000
  任务13: 工作量p=99999, 发布时间x=380000, 截止时间y=450000
  任务14: 工作量p=10101, 发布时间x=430000, 截止时间y=480000
  任务15: 工作量p=20202, 发布时间x=480000, 截止时间y=550000
  任务16: 工作量p=30303, 发布时间x=530000, 截止时间y=610000
  任务17: 工作量p=40404, 发布时间x=580000, 截止时间y=650000
  任务18: 工作量p=50505, 发布时间x=630000, 截止时间y=700000
  任务19: 工作量p=60606, 发布时间x=680000, 截止时间y=760000
  任务20: 工作量p=70707, 发布时间x=730000, 截止时间y=800000
  任务21: 工作量p=80808, 发布时间x=780000, 截止时间y=850000
  任务22: 工作量p=90909, 发布时间x=830000, 截止时间y=900000
  任务23: 工作量p=12321, 发布时间x=880000, 截止时间y=950000
  任务24: 工作量p=23432, 发布时间x=930000, 截止时间y=1000000
  任务25: 工作量p=34543, 发布时间x=980000, 截止时间y=1050000
  任务26: 工作量p=45654, 发布时间x=1030000, 截止时间y=1100000
  任务27: 工作量p=56765, 发布时间x=1080000, 截止时间y=1150000
  任务28: 工作量p=67876, 发布时间x=1130000, 截止时间y=1200000
  任务29: 工作量p=78987, 发布时间x=1180000, 截止时间y=1250000
  任务30: 工作量p=89098, 发布时间x=1230000, 截止时间y=1300000
总工作量sum: 1591779
组员速度:
  组员1: 速度v[1]=10000
  组员2: 速度v[2]=20000
  组员3: 速度v[3]=30000
  组员4: 速度v[4]=40000
  组员5: 速度v[5]=50000
  组员6: 速度v[6]=60000
  组员7: 速度v[7]=70000
  组员8: 速度v[8]=80000
  组员9: 速度v[9]=90000
  组员10: 速度v[10]=100000
  组员11: 速度v[11]=11000
  组员12: 速度v[12]=22000
  组员13: 速度v[13]=33000
  组员14: 速度v[14]=44000
  组员15: 速度v[15]=55000
  组员16: 速度v[16]=66000
  组员17: 速度v[17]=77000
  组员18: 速度v[18]=88000
  组员19: 速度v[19]=99000
  组员20: 速度v[20]=15000
  组员21: 速度v[21]=25000
  组员22: 速度v[22]=35000
  组员23: 速度v[23]=45000
  组员24: 速度v[24]=55000
  组员25: 速度v[25]=65000
  组员26: 速度v[26]=75000
  组员27: 速度v[27]=85000
  组员28: 速度v[28]=95000
  组员29: 速度v[29]=12345
  组员30: 速度v[30]=67890
初始二分范围: [0.000000, 160.000000]
速度排序前: 10000 20000 30000 40000 50000 60000 70000 80000 90000 100000 11000 22000 33000 44000 55000 66000 77000 88000 99000 15000 25000 35000 45000 55000 65000 75000 85000 95000 12345 67890 
速度排序后(降序): 100000 99000 95000 90000 88000 85000 80000 77000 75000 70000 67890 66000 65000 60000 55000 55000 50000 45000 44000 40000 35000 33000 30000 25000 22000 20000 15000 12345 11000 10000 
差分处理:
  v[1]: 100000 → 1000 (差分后)
  v[2]: 99000 → 4000 (差分后)
  v[3]: 95000 → 5000 (差分后)
  v[4]: 90000 → 2000 (差分后)
  v[5]: 88000 → 3000 (差分后)
  v[6]: 85000 → 5000 (差分后)
  v[7]: 80000 → 3000 (差分后)
  v[8]: 77000 → 2000 (差分后)
  v[9]: 75000 → 5000 (差分后)
  v[10]: 70000 → 2110 (差分后)
  v[11]: 67890 → 1890 (差分后)
  v[12]: 66000 → 1000 (差分后)
  v[13]: 65000 → 5000 (差分后)
  v[14]: 60000 → 5000 (差分后)
  v[15]: 55000 → 0 (差分后)
  v[16]: 55000 → 5000 (差分后)
  v[17]: 50000 → 5000 (差分后)
  v[18]: 45000 → 1000 (差分后)
  v[19]: 44000 → 4000 (差分后)
  v[20]: 40000 → 5000 (差分后)
  v[21]: 35000 → 2000 (差分后)
  v[22]: 33000 → 3000 (差分后)
  v[23]: 30000 → 5000 (差分后)
  v[24]: 25000 → 3000 (差分后)
  v[25]: 22000 → 2000 (差分后)
  v[26]: 20000 → 5000 (差分后)
  v[27]: 15000 → 2655 (差分后)
  v[28]: 12345 → 1345 (差分后)
  v[29]: 11000 → 1000 (差分后)
  v[30]: 10000 (保持不变)
开始二分搜索:
我们可以最多增长单位时间0.0000
